# === Rust build output ===
/target/
**/*.rs.bk

# === Cargo package manager ===
**/Cargo.lock
!Cargo.lock # Include it for binary apps, exclude for libraries

# === IDEs/editors ===
# VS Code
.vscode/
# IntelliJ / CLion / RustRover
.idea/

# === OS-specific files ===
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# === Backup & temp files ===
*.swp
*.swo
*.tmp
*.bak
*.log
*~

# === Misc ===
/node_modules/  # if using frontend in same project
npm-debug.log*

# Optional: ignore `.env` or secrets
.env
.env.*

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
**/node_modules/
**/dist/
**/build/

# Environment variables
**/.env
**/.env.*.local
**/.env.local
**/.env.development.local
**/.env.test.local
**/.env.production.local

# Editor directories and files
.vscode/
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln

# OS-specific
.DS_Store
Thumbs.db

# Test coverage
coverage/

# Optional npm cache directory
.npm/

# Optional eslint cache
.eslintcache

# React-specific
*.web.js
*.web.ts
*.web.tsx
*.map

# TypeScript
*.tsbuildinfo

# Yarn
.yarn/
.pnp.*
.yarnrc.yml

# Parcel-bundler
.cache/

# Next.js (if used)
.next/

# Output of `npm pack`
*.tgz

# VS Code settings
.vscode/*

# Local development server files (e.g., Vite, webpack)
*.local
*.dev

# Ignore backend build (if using TypeScript in Node.js)
**/dist/
**/out/

# Firebase / GCP
.firebase/
.firebaserc

# Misc
*.bak
*.tmp
